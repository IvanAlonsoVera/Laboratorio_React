{"ast":null,"code":"import validator from './validation';\nexport function ValidateData(data, rules) {\n  let errors = {};\n  Object.keys(data).forEach(field => {\n    if (rules.hasOwnProperty(field)) {\n      let fielderrors = [];\n      let val = data[field];\n      if (rules[field].true) {\n        if (!val) {\n          fielderrors.push(\"Must be checked\");\n        }\n      } else {\n        if (rules[field].required && validator.isEmpty(val)) {\n          fielderrors.push(\"Value required\");\n        }\n        if (!validator.isEmpty(data[field])) {\n          if (rules[field].minlength && !validator.isLength(val, rules[field].minlength)) {\n            fielderrors.push(`Enter at least ${rules[field].minlength}` + \" characters\");\n          }\n          if (rules[field].alpha && !validator.isAlpha(val)) {\n            fielderrors.push(\"Enter only letters\");\n          }\n          if (rules[field].email && !validator.isEmail(val)) {\n            fielderrors.push(\"Enter a valid email address\");\n          }\n          if (rules[field].equals && !validator.equals(val, data[rules[field].equals])) {\n            fielderrors.push(\"Values don't match\");\n          }\n        }\n      }\n      if (fielderrors.length > 0) {\n        errors[field] = fielderrors;\n      }\n    }\n  });\n  return errors;\n}\n_c = ValidateData;\nvar _c;\n$RefreshReg$(_c, \"ValidateData\");","map":{"version":3,"names":["validator","ValidateData","data","rules","errors","Object","keys","forEach","field","hasOwnProperty","fielderrors","val","true","push","required","isEmpty","minlength","isLength","alpha","isAlpha","email","isEmail","equals","length"],"sources":["C:/Users/angus/source/repos/Laboratorio_React/forms/src/validation.js"],"sourcesContent":["import validator from './validation';\r\n\r\nexport function ValidateData(data, rules) {\r\n    let errors = {};\r\n    Object.keys(data).forEach(field => {\r\n        if (rules.hasOwnProperty(field)) {\r\n            let fielderrors = [];\r\n            let val = data[field];\r\n            if (rules[field].true) {\r\n                if (!val) {\r\n                    fielderrors.push(\"Must be checked\");\r\n                }\r\n            } else {\r\n                if (rules[field].required && validator.isEmpty(val)) {\r\n                    fielderrors.push(\"Value required\");\r\n                }\r\n                if (!validator.isEmpty(data[field])) {\r\n                    if (rules[field].minlength\r\n                        && !validator.isLength(val, rules[field].minlength)) {\r\n                        fielderrors.push(`Enter at least ${rules[field].minlength}`\r\n                            + \" characters\");\r\n                    }\r\n                    if (rules[field].alpha && !validator.isAlpha(val)) {\r\n                        fielderrors.push(\"Enter only letters\");\r\n                    }\r\n                    if (rules[field].email && !validator.isEmail(val)) {\r\n                        fielderrors.push(\"Enter a valid email address\");\r\n                    }\r\n                    if (rules[field].equals\r\n                        && !validator.equals(val, data[rules[field].equals])) {\r\n                        fielderrors.push(\"Values don't match\");\r\n                    }\r\n                }\r\n            }\r\n            if (fielderrors.length > 0) {\r\n                errors[field] = fielderrors;\r\n            }\r\n        }\r\n    })\r\n    return errors;\r\n}"],"mappings":"AAAA,OAAOA,SAAS,MAAM,cAAc;AAEpC,OAAO,SAASC,YAAY,CAACC,IAAI,EAAEC,KAAK,EAAE;EACtC,IAAIC,MAAM,GAAG,CAAC,CAAC;EACfC,MAAM,CAACC,IAAI,CAACJ,IAAI,CAAC,CAACK,OAAO,CAACC,KAAK,IAAI;IAC/B,IAAIL,KAAK,CAACM,cAAc,CAACD,KAAK,CAAC,EAAE;MAC7B,IAAIE,WAAW,GAAG,EAAE;MACpB,IAAIC,GAAG,GAAGT,IAAI,CAACM,KAAK,CAAC;MACrB,IAAIL,KAAK,CAACK,KAAK,CAAC,CAACI,IAAI,EAAE;QACnB,IAAI,CAACD,GAAG,EAAE;UACND,WAAW,CAACG,IAAI,CAAC,iBAAiB,CAAC;QACvC;MACJ,CAAC,MAAM;QACH,IAAIV,KAAK,CAACK,KAAK,CAAC,CAACM,QAAQ,IAAId,SAAS,CAACe,OAAO,CAACJ,GAAG,CAAC,EAAE;UACjDD,WAAW,CAACG,IAAI,CAAC,gBAAgB,CAAC;QACtC;QACA,IAAI,CAACb,SAAS,CAACe,OAAO,CAACb,IAAI,CAACM,KAAK,CAAC,CAAC,EAAE;UACjC,IAAIL,KAAK,CAACK,KAAK,CAAC,CAACQ,SAAS,IACnB,CAAChB,SAAS,CAACiB,QAAQ,CAACN,GAAG,EAAER,KAAK,CAACK,KAAK,CAAC,CAACQ,SAAS,CAAC,EAAE;YACrDN,WAAW,CAACG,IAAI,CAAE,kBAAiBV,KAAK,CAACK,KAAK,CAAC,CAACQ,SAAU,EAAC,GACrD,aAAa,CAAC;UACxB;UACA,IAAIb,KAAK,CAACK,KAAK,CAAC,CAACU,KAAK,IAAI,CAAClB,SAAS,CAACmB,OAAO,CAACR,GAAG,CAAC,EAAE;YAC/CD,WAAW,CAACG,IAAI,CAAC,oBAAoB,CAAC;UAC1C;UACA,IAAIV,KAAK,CAACK,KAAK,CAAC,CAACY,KAAK,IAAI,CAACpB,SAAS,CAACqB,OAAO,CAACV,GAAG,CAAC,EAAE;YAC/CD,WAAW,CAACG,IAAI,CAAC,6BAA6B,CAAC;UACnD;UACA,IAAIV,KAAK,CAACK,KAAK,CAAC,CAACc,MAAM,IAChB,CAACtB,SAAS,CAACsB,MAAM,CAACX,GAAG,EAAET,IAAI,CAACC,KAAK,CAACK,KAAK,CAAC,CAACc,MAAM,CAAC,CAAC,EAAE;YACtDZ,WAAW,CAACG,IAAI,CAAC,oBAAoB,CAAC;UAC1C;QACJ;MACJ;MACA,IAAIH,WAAW,CAACa,MAAM,GAAG,CAAC,EAAE;QACxBnB,MAAM,CAACI,KAAK,CAAC,GAAGE,WAAW;MAC/B;IACJ;EACJ,CAAC,CAAC;EACF,OAAON,MAAM;AACjB;AAAC,KAtCeH,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module"}